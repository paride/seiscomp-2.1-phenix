                      CVTIT MANUAL


SUMMARY OF CVTIT FEATURES
-------------------------

- Cvtit takes as input one or several Titan files. Wild cards in file
  names supported.
- For output, a  choice of 7 data format is available, including SAC 
  and SISMALP.
- A test of continuity of the raw data and a test of continuity of the
  acquisition system parameters are run. In case of failure, current
  output data series are closed and new series started.
- Calculation of UTC data start time, with regard to the observed or
  estimated time drift of the acquisition system, and to the digital
  filters delays. 
- The time correction can be turned off.
  In that case only the digital filters delays are applied
- Optional time correction by a specified number of minutes.
- Extraction of selected events according to a table of event times
- If missing or wrong, the station name can be .
- Information files relative to the output data series are also written
  to disk.
- Output data can be written in optional day directories.
- Optional segmentation of the output data according to a specified
  duration.
- DC level of the output data can be removed. Usefull for gain-ranging
  data format such as SISMALP.


INTRODUCTION
------------

The cvtit program takes as input the field data recorded by the 
acquisition systems manufactured by Agecodagis and produces output
data in various optional formats. The format of the fied data is
called TITAN and described in a document available both on Internet
and the Web by the Agecodagis Company. The output data formats presently
supported are: SAC, SISMALP, SEGY, ASCII, AH-compressed and Binary.
A SEED to SAC converter is also available.

Input titan data stream can be read from disk files or SCSI devices
such as hard drives (DOS or LINUX partitiones), CDROM or DAT (TITAN or 
other partition types).

The time is usually processed in a first pass and a table containing
the observed difference between the data time stamp (generated by the
acquisition system) and the external time reference. A graphic tool,
called "xdft" is provided to monitor the observed time, to remove
eventual erroneous points. The output of xdft is a second table,
which is an estimate of the time drift, by smoothing of the observed 
drift.

Titan streams can be acquired continuously (permanent or temporary 
seismic networks) or in trigger mode (seismic experiments or data
retrieving through telephone links). Large amounts of data collected 
in continuous mode at high sample rate on 2Gbytes hard drives usually
require an premiminary step to copy field data on CDROM's.

The Titan format is a compressed serial oriented format, well suited
for communcation through modems and/or serial ports. If offers the 
capability of quick synchronisation on short 12-Bytes frames, with 
a minimum data loss. Therefore, a Titan stream can be chunk into pieces 
at any place and conversely, pieces coming from different sources can 
be concatenated as whished into a single Titan stream.



OUTPUT DATA FILE NAMING CONVENTIONS
-----------------------------------
Except for SISMALP, output data file names have the following format:

    YYYY.MM.DD-HH.MM.SS.sta.C-c.postfix

where

    "YYYY.MM.DD-HH.MM.SS   is the date and system time of the first sample
    "sta"                  is the station identifier
    "C"                    is the channel number (0 to 15)
    "c"                    is the component number (0 to 2)
    "postfix"              is the format identifier:
         "SAC"     for SAC
         "SEGY"    for SEGY
         "ahz"     for AH-compressed
         "data"    for binary
         "asc"     for ASCII

The information files have the same name, except that the postfix becomes
"info".

For SISMALP, the output data file names have the format STAn.sis, STAn.ndx,
and STAn.info for the information file.

If two consecutive data files have the same date-time, the previous file
is overwritten by the current file. Also, data files containing a number
of sample less or equal to 64 are deleted.



INFORMATION FILES
-----------------
The main purpose of these files is to give the timing informations
relative to the data files created by cvtit and how the start time
(the time of the first sample) was calculated.

Example:

    LAR    station
    0      channel
    0      comp
    62.50000000   sample rate
    98.08.25-04:06:10.014   start time (corrected by estimated dt)
    98.08.25-04:06:09.874   uncorrected time
    98.08.18-17:22:00.000   system reset time     (6.45 days old, synchro)
    98.08.25-04:04:59.835   external pulse time   (70 secs old)
    -0.1650  observed dt
    -0.1641  estimated dt (/fels/sismnet/dft/LAR/1998.08.25-04.05.19.LAR.dft)
    +0.0240  adc delay
    +0.0000  filter delay
       2816  num of samples

Here the start time is corrected according to the estimated drift.
The eventual AD converter and digital filters time delays are also taken 
into account for the calculation of the corrected start time, as follow:

    09.874 - (-0.1641) - (+0.0240) - (+0.0000) = 10.014

Creation of the info files can be turned off by recompiling cvtit, setting 
the option "noinfo" to TRUE.



CVTIT CONFIGURATION FILE AND TIME DATABASE
------------------------------------------

Usage:
    1- Environment:
           setenv CVTIT_CONF ~/network/cvtit_cfg
    2- Configuration file:
           ~/network/cvtit_cfg:
               network_dt  basedir1
               network_dft basedir2
    3- Cvtit option:
           db=network

How does it work:
----------------
It is convenient to store observed and estimated time drift of acquisition
systems in pre-defined directories. If the database option is used, the
names of this directories will be "dt" and "dft" and the configuration file 
will provide the base directory paths as:

     basedir1/dt  for the observed time drifts
     basedir2/dft for the estimated time drifts

Then the .dt files will stored by cvtit under
     basedir/dt/STA/xxxx.dt

and cvtit will look for the .dft files under
     basedir/dft/STA/xxxx.dft

The "db=" option assumes that the environmental variable CVTIT_CONF is 
set to the path of the configuration file.

Examples:

    setenv CVTIT_CONF /d1/home/fels/pyren/cvtit.conf

    When running:
    cvtit ... db=pyren ...
    the program will look for the cvtit.conf file, and then for:

    PYREN_DT /home/delta-t/raw
    PYREN_DFT /mount/d2/titan-drifts
                  or
    pyren-dt .
    pyren_dft ../temp_dft

As described above, the .dt and .dft files are actually stored in 
sub-directories named after the station names. For the .dt files, if 
missing, the station sub-directory is created by cvtit. For the .dft 
files, the station sub-directories must be created by the user.



OPTIONS LIST
------------
    -f list
    -time
    sta=XYZ

    -sac
    -sacsun
    -ah
    -segy
    -bin
    -sis
    -asc
    chan=x
    comp=y
    bof=n
    eof=n
    -tcorr
    o=N/R/A

    db=path
    -daydir
    tl=event_list
    len=n
    ts=n
    -v

OPTIONS DESCRIPTION
-------------------
-f list
    If the first argument in the cvtit command line is not a Titan file,
    the programm expects somewhere in the command line the option "-f" 
    followed by a list of titan file or titan devices.
    Examples:\n");
        cvtit -time -f dir1/d.* dir2/*MLS*
        cvtit -sis -tcorr -f file1 file2 file3 dir1/file
-time
    Process time only, no data extraction. This is the "time pass",
    usually the first pass run on the Titan input files.

sta=XYZ
    Force station name as specified. For sismalp, only 4 chars are used.
    If a file with the same name is found in the current directory, cvtit
    will consult it to get the station coordinates and elevation, the
    seismic components orientation and a time correction expressed as 
    an integer number of minutes.
    Example: if we use sta=REY, we may have a file named REY containing:

        dt=-2 1998.09.17-17.01.51.REY.dft
        lat=45.377
        lon=0.987
        elev=264
        0=0.00 -90.00       (component 0 azim and dip)
        1=5.00  0.00        (component 1 azim and dip)
        2=95.00 0.00        (component 2 azim and dip)

    All entries are optional. For "dt=", the second field must be the
    estimated drift file name for which the correction applies.

-sac
-sacsun
-ah
-segy
-bin
-sis
-asc

bof=nnn
    Start processing input Titan file at specified offset (bytes).

eof=nnn
    Stop process input Titan file past the specified offset (bytes).

o=
    o=R Apply the relative offset to the data series.
    o=A Apply the absolute offset to the data series.
    o=N Do not apply any offset correction (Steps may occur in the series).


-daydir
    Output data are written to disk into day directories with
    names of the form Rnnn where nnn is the julian day.

tl=
    Extract events from a date-time list read in the specified file name.
    Time list file format: n lines 'yyyy.mm.dd-hh.mm.ss duration'.
    Year may have 2 digits. Duration to extract is in seconds.
    Example:   1997.02.04-09:34:51 200   or   97.02.04-09:34:51 200
    Times must be sorted. If the difference between 2 consecutive times
    is less than 'duration', events can be skipped.

len=
    Set the event duration to extract in case this variable is missing in
    the date-time event list. Example: len=400 (seconds).

ts=
    Segment output data using the specified duration in seconds.
    Segments start time occur at multiple of the specified duration.


db=path
    See "CVTIT CONFIGURATION FILE AND TIME DATABASE" above.

-tcorr
    Do not correct the time for the drift between the system time and UTC.
    Just apply the AD converter delay and the anti-aliasing filter delay.

chan=n
    Extract data only for the specified channel. Note the unconventionnal
    channel naming in the Titan format, where "channel" stands for 
    "sensor".

comp=n
    Extract data only for the specified component.


Hidden options
    -dbug
    -gr
    -data



EXAMPLES OF DATA PROCESSING OF TITAN FILES
------------------------------------------

We give here examples of sequences of commands for single and/or multiple
Titan input files, different type of output, different type of time
corrections.


Scenario 1
----------
Type of input and ouput
    - single input file
    - sac output format
    - time corrected according to observed dt

command:
    cvtit filename
output:
    datime1.STA.v-c.SAC
    datime1.STA.v-c.info
    datime2.STA.v-c.SAC
    datime2.STA.v-c.info



Scenario 2
----------
Type of input and ouput
    - single input file
    - station code set to "STA1"
    - sismalp output format
    - time corrected according to estimated dt

command 1:
    cvtit filename -time sta=STA1
output:
    datime1.STA1.dt

command 2:
    xdft STA1 datime1.STA1.dt
output:
    datime2.STA1.dt
    datime3.STA1.dft
    datime4.STA1.dt
    datime5.STA1.dft

command 3:
    cvtit filename -sis sta=STA1
output:
    STA1.ndx
    STA1.sis
    STA1.info
    ...................



Scenario 3
----------
Type of input and ouput
    - multiple input file
    - SAC output data into day-directories
    - time corrected according to estimated dt

command 1:
        cvtit -f /data/*sta1* /data/*sta2* -time
    output:
        datime1.STA1.dt
        datime2.STA2.dt
        datime3.STA3.dt
        ...............

command 2
        xdft STA1 datime1.STA1.dt
    output:
        datime4.STA1.dt
        datime5.STA1.dft

command 3
        xdft STA2 datime2.STA2.dt
    output:
        datime6.STA2.dt
        datime7.STA2.dft

command 4
        xdft STA3 datime3.STA3.dt
    output:
        datime8.STA3.dt
        datime9.STA3.dft
    ................

command 5
        cvtit -f filename1 filename2 -daydir
    output:
        R253/datime1.STA1.v-c.SAC
        R253/datime1.STA1.v-c.info
        ...................
        R256/datime2.STA2.v-c.SAC
        R256/datime2.STA2.v-c.info
        ...................



Scenario 4
----------
Type of input and ouput
    - Idem scenario 3 but with the use of the time database.
    Note that xdft can be run on a single .dt file or on the
    concatenation of several .dt files.

command 1  (if not already done)
        setenv CVTIT_CONF /d1/home/fels/sismnet/cvtit.conf

command 2
        cvtit -f /data/*.tit filename1 filename2 -time db=pyren
    output:
        PYREN_DT/datime1.STA1.dt
        PYREN_DT/datime2.STA2.dt
        PYREN_DT/datime3.STA2.dt
        PYREN_DT/datime4.STA2.dt
        ...............

command 3
        xdft STA1 PYREN_DT/datime1.STA1.dt
    output:
        datime2.STA1.dt
        datime3.STA1.dft

command 4
        mv datime2.STA1.dt PYREN_DT/STA1
        mv datime3.STA1.dft PYREN_DFT/STA1

command 5
        cat PYREN_DT/STA2/*.dt > ./STA2.dt
        xdft STA2 STA2.dt
    output:
        datime5.STA2.dt
        datime6.STA2.dft

command 6
        mv datime5.STA2.dt PYREN_DT/STA2
        mv datime6.STA2.dft PYREN_DFT/STA2
        ........................

command 7
        cvtit -f /data/*sta1* /data/*sta2* db=pyren -daydir
    output:
        R253/datime1.STA1.v-c.SAC
        R253/datime1.STA1.v-c.info
        R253/datime2.STA1.v-c.SAC
        R253/datime2.STA1.v-c.info
        ...................
        R256/datime3.STA2.v-c.SAC
        R256/datime3.STA2.v-c.info
        R257/datime4.STA2.v-c.SAC
        R257/datime4.STA2.v-c.info
        ...................



DATA TIMING
-----------
    We explain here how the time of the data series is calculated.
Every 128 primary data samples of a Titan stream, a time frame is found,
which gives the system time of the 128'th sample. The first calculation done
is to compute the first sample system time according to

    t[1] = t[128] - sint*128 

where sint is the sample interval.

Let be:
    t_sys    the system time of the first sample of the data series
    dt       the time offset between the system time and UTC
    t_adc    the time delay of the analog to digital converter filters
    t_filt   the time delay of the titan digital filters
    t_start  the corrected time (UTC) of the first sample of the data series

We compute the start time of the data series according to

    t_start = t_sys - dt - t_adc - t_filt

The time offset "dt" can be

    - the more recent observed offset
    - the estimeted offset value, from smoothing of the oberved offset
    - zero, if the option -tcorr is specified

The calculation type is indicated in the ".info" files by:

    "corrected by observed dt"
    "corrected by estimated dt"
    "no dt correction applied"

